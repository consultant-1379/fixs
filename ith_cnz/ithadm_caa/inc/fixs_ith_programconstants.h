//	********************************************************
//
//	 COPYRIGHT Ericsson 2016
//	All rights reserved.
//
//	The Copyright to the computer program(s) herein
//	is the property of Ericsson 2016.
//	The program(s) may be used and/or copied only with
//	the written permission from Ericsson 2016 or in
//	accordance with the terms and conditions stipulated in
//	the agreement/contract under which the program(s) have
//	been supplied.
//
//	********************************************************

#ifndef ITHADM_CAA_INC_FIXS_ITH_PROGRAMCONSTANTS_H_
#define ITHADM_CAA_INC_FIXS_ITH_PROGRAMCONSTANTS_H_

#define FIXS_ITH_HA_DAEMON_NAME 			"fixs_ithd"
#define FIXS_ITH_SERVER_LOCK_FILE_PATH  	"/var/run/ap/fixs_ith.lck"
#define FIXS_ITH_LOGGER_APPENDER_NAME  		"FIXS_ITHD"
#define FIXS_ITH_SERVICE_NAME               "FIXS_ITHD"
#define FIXS_ITH_INIT_HA_APP_MANAGER_DELAY  1
#define FIXS_ITH_TASK_ENTER_REACTOR_LOOP_DELAY 1
#define FIXS_ITH_SERVER_N_THREADS				8
#define FIXS_ITH_INIT_SIGS_HDLR_N_RETRY			10
#define FIXS_ITH_INIT_SIGS_HDLR_DELAY  			1 /* seconds*/
#define FIXS_ITH_CONFIG_MAGAZINE_ADDRESS_IMM_SEPARATOR  '.'
//#define FIXS_ITH_TIPC_FILE_PATH  			"/opt/ap/fixs/conf/tipc_vlanid"
#define FIXS_ITH_TIPC_FILE_PATH  			"/cluster/storage/system/config/apos/tipc_vlantag"
//#define FIXS_ITH_DRBD_FILE_PATH  			"/opt/ap/fixs/conf/drbd_vlanid"
#define FIXS_ITH_DRBD_FILE_PATH  			"/cluster/storage/system/config/apos/network_10g_vlantag"
//#define FIXS_ITH_OAM_FILE_PATH  			"/opt/ap/fixs/conf/oam_vlanid"
#define FIXS_ITH_OAM_FILE_PATH  			"/cluster/storage/system/config/apos/oam_vlanid"
#define FIXS_ITH_NETSNMP_INITIALIZER_NAME	"FIXS_ITH_NMS"


#define DEFAULT_SNMP_TIMEOUT_MS 512

#define CONTROL_PLANE_BP_INDEXES 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24
#define CONTROL_PLANE_SWITCH_PORTS_INDEXES 25, 26
#define CONTROL_PLANE_TRANSPORT_PORTS_INDEXES 29
#define CONTROL_PLANE_INTER_SUBRACK_PORT_INDEX 31
#define CONTROL_PLANE_TRANSPORT1_PORT_INDEX 29
#define CONTROL_PLANE_TRANSPORT2_PORT_INDEX 30


#define TRANSPORT_PLANE_BP_INDEXES 1, 6, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71, 76, 81, 86, 91, 96, 101, 106, 111, 116
#define TRANSPORT_PLANE_BP_INDEXES_CMX 1, 6, 11, 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, 71, 76, 81, 86, 91, 96, 101, 106, 111, 116
#define TRANSPORT_PLANE_FRONT_PORT_INDEXES_CMX 131, 136, 141, 146, 151, 156, 161, 166, 171, 172, 173, 174
#define TRANSPORT_PLANE_INTER_SUBRACK_PORT_INDEX 122
#define TRANSPORT_PLANE_AGG_MEMBER_INDEXES 131, 161
#define TRANSPORT_PLANE_AGG_MEMBER_INDEXES_CMX 141,146
#define TRANSPORT_PLANE_CONTROL_PORTS_INDEXES 193
#define TRANSPORT_PLANE_AGGREGATOR_INDEX 195
#define TRANSPORT_PLANE_CONTROL1_PORT_INDEX 193
#define TRANSPORT_PLANE_CONTROL2_PORT_INDEX 194
#define TRANSPORT_PLANE_FRONT_PORT_EVOET_CMX 131, 136, 151, 156, 161, 166

namespace fixs_ith {

	/** @brief ITH Server program return codes.
	 *
	 *	ProgramReturnCodeConstants enumeration detailed description
	 */


#define CONTROL_PLANE_MASK             0x1
#define TRANSPORT_PLANE_MASK           0x2
#define CONTROL_TRANSPORT_PLANES_MASK  0x3
#define MAGAZINE_ADDRESS_SIZE_MAX       16
#define SWITCHBOARD_KEY_NAME_MAX_SIZE   20

#define FIXS_ITH_PROGRAM_RETURN_CODE_CONSTANTS_BASE 0
#ifndef FIXS_ITH_CONFIG_IPN_COUNT
	#define FIXS_ITH_CONFIG_IPN_COUNT	2
#endif

	enum ProgramReturnCodeConstants {
		PROGRAM_EXIT_OK = FIXS_ITH_PROGRAM_RETURN_CODE_CONSTANTS_BASE,
		PROGRAM_EXIT_ANOTHER_SERVER_RUNNING,
		PROGRAM_EXIT_BAD_INVOCATION,
		PROGRAM_EXIT_LOCK_FILE_OPEN_ERROR,
		PROGRAM_EXIT_LOCK_FILE_LOCKING_ERROR,
		PROGRAM_EXIT_IMM_MANAGEMENT_SESSION_OPEN_FAILURE,
		PROGRAM_EXIT_MEMORY_ALLOCATION_ERROR
	};

	enum ProgramErrorConstants {
		PROGRAM_ERROR_VALUES_START = -3000,
	};

	/** @brief Program State constants constants.
	 *
	 *	ProgramStateConstants enumeration detailed description
	 */
	enum ProgramStateConstants {
		PROGRAM_STATE_RUNNING = 0,
		PROGRAM_STATE_EXIT_PROGRAM,
		PROGRAM_STATE_STOP_WORKING,
		PROGRAM_STATE_RUNNING_NODE_ACTIVE,
		PROGRAM_STATE_RUNNING_NODE_PASSIVE,
		PROGRAM_STATE_RUNNING_NODE_UNDEFINED,
		PROGRAM_STATE_RUNNING_QUIESCED,
		PROGRAM_STATE_UNKNOWN
	};

	/** @brief ITH warning constants.
	 *
	 *	WarningConstants enumeration detailed description
	 */
	enum WarningConstants {
		WAR_NO_WARNINGS =	0,
	};


	/** @brief ITH error constants.
	 *
	 *	ErrorConstants enumeration detailed description
	 */
	enum ErrorConstants {
		ERR_ERROR_VALUES_START = -1000,

		ERR_IMM_CREATE_OBJ,
		ERR_IMM_DELETE_OBJ,
		ERR_IMM_SLOT_POSITION_NOT_FOUND,
		ERR_IMM_MAGAZINE_NOT_FOUND,
		ERR_IMM_ATTRIBUTE_NOT_FOUND,
		ERR_IMM_GET_ATTRIBUTE,
		ERR_IMM_ADD_OI,
		ERR_IMM_REMOVE_OI,
		ERR_IMM_TOO_MANY_OP,
		ERR_IMM_MODIFY_OBJ,
		ERR_OM_HANDLER_INIT_FAILURE,
		ERR_OM_HANDLER_NOT_INITIALIZED,
		ERR_OM_HANDLER_FINALIZE_FAILURE,


		ERR_DSD_GET_LOCAL_NODE,
		ERR_CS_GET_INSTANCE,
		ERR_CS_GET_SIDE,
		ERR_CS_GET_FBN,
		ERR_CS_GET_SLOT,
		ERR_CS_GET_MAGAZINE,
		ERR_CS_GET_IP_ETH,
		ERR_CS_API_BINDING,
		ERR_CS_TOO_MANY_BOARD_FOUND,
		ERR_CS_NO_BOARD_FOUND,
		ERR_CS_GET_BOARD_ID,
		ERR_CS_CREATE_BOARD_SEARCH_INSTANCE,
		ERR_CS_CREATE_HWC_INSTANCE,
		ERR_CS_GET_SYSNO,
		ERR_CS_ERROR,
		ERR_CS_BOARD_NOT_FOUND,
		ERR_IP_ADDRESS_CONVERSION,
		ERR_IP_ADDRESS_NOT_FOUND,
		ERR_NODE_SIDE_UNDEFINED,
		ERR_NULL_POINTER,
		ERR_REACTOR_HANDLER_REGISTER_FAILURE,
		ERR_REACTOR_HANDLER_REMOVE_FAILURE,
		ERR_REACTOR_TIMER_QUEUE_CLOSE_FAILURE,
		ERR_REACTOR_SCHEDULE_TIMER_FAILURE,
		ERR_MEMORY_BAD_ALLOC,
		ERR_INVALID_OBJECT,
		ERR_SVC_ACTIVATE,
		ERR_SVC_DEACTIVATE,
		ERR_OPEN,
		ERR_START_JOBS,
		ERR_START_SCHEDULER,
		ERR_SCHEDULER_ALREADY_STARTED,
		ERR_STOP_SCHEDULER,
		ERR_SCHEDULER_QUEUE_LOCK,
		ERR_SCHEDULER_ENQUEUE_NOT_ENABLED,
		ERR_SCHEDULER_ENQUEUE_FAILURE,
		ERR_SCHEDULER_INVALID_INTERVAL,
		ERR_WAIT_JOBS,
		ERR_HA_FAILURE,
		ERR_CREATE_BNC_OBJECTS,
		ERR_CREATE_CONTROL_BNC_OBJECTS,
		ERR_CREATE_TRANSPORT_BNC_OBJECTS,
		ERR_SET_CONTROL_ADMIN_STATE,
		ERR_SET_TRANSPORT_ADMIN_STATE,
		ERR_SET_ADMIN_STATE,
		ERR_SET_PORT_DEFAULT_USER_PRIORITY,
		ERR_DELETE_BNC_OBJECTS,
		ERR_GET_INTERFACE_INFO_FROM_SB,
		ERR_UNDEFINED_INTERFACE,
		ERR_IMM_OBJECT_ALREADY_EXIST,
		ERR_IMM_OBJECT_NOT_EXIST,
		ERR_GET_BRIDGEPORT_INFO_FROM_SB,
		ERR_GET_BRIDGE_INFO_FROM_SB,
		ERR_BUILD_OBJECT_DN,
		ERR_SNMP_TRAP_SUBSCRIBE,
		ERR_SNMP_TRAP_UNSUBSCRIBE,

		ERR_CONFIG_CONTEXT_NOT_ACCESSIBLE,
		ERR_CONFIG_CONTEXT_NOT_FOUND,
		ERR_VLAN_NOT_FOUND_IN_CONTEXT,
		ERR_CONFIG_SB_INTERFACE_FAILURE,
		ERR_CONFIG_PROTECTED_OBJECT,

		ERR_CONFIG_INVALID_BRIDGE_ID,
		ERR_CONFIG_INVALID_ETHERNET_PORT_ID,
		ERR_CONFIG_ETH_AUTO_NEG_CHANGE_NOT_ALLOWED,
		ERR_CONFIG_ETH_AUTO_NEG_CHANGE_NOT_SUPPORTED,
		ERR_CONFIG_INVALID_AGGREGATOR_ID,
		ERR_CONFIG_INVALID_BRIDGE_PORT_ID,
		ERR_CONFIG_INVALID_VLAN_ID,
		ERR_CONFIG_INVALID_SUBNET_VLAN_ID,
		ERR_CONFIG_INVALID_SUBNET_VLAN_PLANE,
		ERR_CONFIG_INVALID_SUBNET_VLAN_IP,

		ERR_CONFIG_DUPLICATED_VLAN_ID,
		ERR_CONFIG_RESTRICTED_VLAN_ID,
		ERR_CONFIG_PROTECTED_VLAN,
		ERR_CONFIG_INVALID_TAGGED_PORT,
		ERR_CONFIG_INVALID_UNTAGGED_PORT,
		ERR_CONFIG_DUPLICATED_PORT,
		ERR_CONFIG_AGG_MEMBER_PORT,
		ERR_CONFIG_DUPLICATED_SUBNET_VLAN_IP,

		//L3
		ERR_CONFIG_INVALID_ROUTER_NAME,
		ERR_CONFIG_INVALID_INTERFACE_ID,
		ERR_CONFIG_INVALID_INTERFACE_NAME,
		ERR_CONFIG_INVALID_BFDPROFILE_NAME,
		ERR_CONFIG_INVALID_ACLINGRESS_NAME,
		ERR_CONFIG_INVALID_ADDRESS_ID,
		ERR_CONFIG_CONFLICTING_ADDRESS,
		ERR_CONFIG_INVALID_LOOPBACK,
		ERR_CONFIG_INVALID_ENCAPSULATION,
		ERR_CONFIG_DUPLICATED_ENCAPSULATION,
		ERR_CONFIG_MISSING_ENCAPSULATION_VID,
		ERR_CONFIG_DUPLICATED_LOOPBACK,
		ERR_CONFIG_INVALID_ADDRESS,

		ERR_CONFIG_INVALID_DST_ID,
		ERR_CONFIG_INVALID_DST_IP,
		ERR_CONFIG_DUPLICATED_DST,
		ERR_CONFIG_INVALID_NEXTHOP_ID,
		ERR_CONFIG_INVALID_DISCARD,
		ERR_CONFIG_CONFLICTING_NEXTHOP,
		ERR_CONFIG_INVALID_VRRPSESSION_STATE,
		ERR_CONFIG_INVALID_VRRPSESSION,
		ERR_CONFIG_INVALID_VRRP_INTERFACE_NAME,
		ERR_CONFIG_INVALID_VRRP_ADVERTISE_INTERVAL,
		ERR_CONFIG_INVALID_VRRP_PRIORITIZED_SESSION,
		ERR_CONFIG_INVALID_VRRP_OWNER,
		ERR_CONFIG_CONFLICTING_VRRPSESSION_PRIORITIZED,
		ERR_CONFIG_INVALID_BFDSESSION,
		ERR_CONFIG_INVALID_ACLENTRY_NAME,
		ERR_CONFIG_INVALID_ACLIPV4_NAME,
		ERR_CONFIG_ACLENTRY_ICMP_IP_MISMATCH,
		ERR_CONFIG_ACLENTRY_PORT_IP_MISMATCH,

		ERR_CONFIG_REFERENCED_OBJECT,

		ERR_CONFIG_NOT_UNIQUE_VRID,
		ERR_CONFIG_NOT_UNIQUE_ACLENTRY_PRIORITY,
		ERR_CONFIG_PROTECTED_ADDRESS,
		ERR_CONFIG_ADDRESS_CONFLICT,
		ERR_CONFIG_BFD_CONFLICT,
		ERR_CONFIG_INVALID_BRIDGEPORT_STATE,
		ERR_BACKUP_IN_PROGRESS,

		ERR_SMX_ALARM_NOT_RAISED,
		ERR_SMX_ALARM_NOT_CEASED,

		ERR_GENERIC,
		ERR_FOREVER_OP,
		ERR_CONFIG_INCONSISTENCY_FOUND,

		ERR_TRAP_DISABLED,

		ERR_MKDIR,

		ERR_NO_PATCH,

		ERR_BRF_POLICY_HANDLER_INIT,

		// Add here new error codes and adjust the above FIXS_ITH_ERROR_CONSTANTS_COUNT macro constant
		ERR_NO_ERRORS = 0
		// New error declarations have to not be added here, but at the start of this list
	};

	/** @brief Board generic constants.
	 *
	 *	BoardGenericConstants enumeration detailed description
	 */
	enum BoardGenericConstants {
		//SWITCH_BOARD_COUNT = 2,
		BOARD_MAGAZINE_UNDEFINED = ~0U,
		BOARD_SLOT_UNDEFINED = -1,
	};

	typedef enum BoardSlotPosition {
		BOARD_SMX_LEFT = 0,
		BOARD_SMX_RIGHT = 25,
                BOARD_CMX_LEFT = 26,
                BOARD_CMX_RIGHT = 28,
		BOARD_SMX_UNDEFINED = -1,
		BOARD_CMX_UNDEFINED = -1
	}board_slotposition_t;

  	typedef enum SwitchBoardPlaneConstants {
		CONTROL_PLANE  = 0x1,
		TRANSPORT_PLANE = 0x2,
		CONTROL_TRANSPORT_PLANES = 0x3
  	} switchboard_plane_t;

  	typedef enum
  	{
  		UNDEFINED_MAGAZINE = 0x00,
		APZ_MAGAZINE = 0x01,
		APT_MAGAZINE = 0x02,
		ALL_MAGAZINE = 0x03
  	} magazine_identifier_t;


//  	enum SwitchBoardPlaneConstants
//	{
//		CONTROL_PLANE = 0x1,
//		TRANSPORT_PLANE = 0x2,
//		CONTROL_TRANSPORT_PLANES = 0x3
//	};


  	const unsigned short DEFAULT_SNMP_INDEX = 0;
}

#endif /* ITHADM_CAA_INC_FIXS_ITH_PROGRAMCONSTANTS_H_ */
